daemonset:
  extraEnvs:
    - name: "ELASTICSEARCH_USERNAME"
      valueFrom:
        secretKeyRef:
          name: elasticsearch-master-credentials
          key: username
    - name: "ELASTICSEARCH_PASSWORD"
      valueFrom:
        secretKeyRef:
          name: elasticsearch-master-credentials
          key: password
  hostNetworking: false
  secretMounts:
    - name: elasticsearch-master-certs
      secretName: elasticsearch-master-certs
      path: /usr/share/filebeat/certs/
  filebeatConfig:
    filebeat.yml: |
      filebeat.config:
        modules:
          path: ${path.config}/modules.d/*.yml
          # Reload module configs as they change:
          reload.enabled: false
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            templates:
              - condition:
                  not:
                    or:
                      - equals:
                          kubernetes.namespace: "kube-system"
                      - equals: 
                          kubernetes.namespace: "calico-system"
                      - equals:
                          kubernetes.namespace: "default"
                      - equals:
                          kubernetes.namespace: "elastic-system"
                      - equals: 
                          kubernetes.namespace: "instana-agent"
                      - equals:
                          kubernetes.namespace: "ingress-basic"
                      - equals:
                          kubernetes.namespace: "kube-public"
                      - equals: 
                          kubernetes.namespace: "kube-node-lease"
                      - equals:
                          kubernetes.namespace: "monitoring"
                      - equals:
                          kubernetes.namespace: "tigera-operator"

                config:
                  - type: container
                    paths:
                      - /var/log/containers/*-${data.kubernetes.container.id}.log
                    containers.ids:
                      -  "${data.kubernetes.container.id}"
      output.logstash:
        hosts: ["{{ hostvars['logstash']['ansible_host'] }}:5044"]

      processors:
        - include_fields: 
            fields: ["kubernetes.deployment.name", "container.image.name", "kubernetes.namespace", "kubernetes.node.name", "kubernetes.pod.name", "message", "kubernetes.pod.ip", "kubernetes cronjob.name"]

  maxUnavailable: 1
  securityContext:
    runAsUser: 0
    privileged: false
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "1000m"
      memory: "500Mi"
  tolerations:
          - key: node-role.kubernetes.io/control-plane
            effect: NoSchedule
          - key: node-role.kubernetes.io/master
            effect: NoSchedule
          - key: workload
            operator: Equal
            value: b2b
          - key: workload
            operator: Equal
            value: appuser
          - key: workload
            operator: Equal
            value: merch
          - key: workload
            operator: Equal
            value: newuser
          - key: workload
            operator: Equal
            value: order

replicas: 1

hostPathRoot: /var/lib

image: "docker.elastic.co/beats/filebeat"
imageTag: "8.5.1"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        curl --fail 127.0.0.1:5066
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

readinessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        filebeat test output
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

managedServiceAccount: true

clusterRoleRules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "apps"
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch

updateStrategy: RollingUpdate

nameOverride: ""
fullnameOverride: ""